{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\ASUS\\\\Documents\\\\React\\\\todolist\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useRef}from'react';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),toDoList=_useState2[0],setToDo=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var inputName=useRef(null);var handleName=function handleName(event){setName(event.target.value);};var handleAdd=function handleAdd(){var newList=toDoList.concat({name:name});setToDo(newList);};var clearList=function clearList(){setToDo([]);inputName.current.value='';};return/*#__PURE__*/_jsx(\"div\",{className:\"mainContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"todoContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:'center'},children:\"My Lists\"}),/*#__PURE__*/_jsx(\"button\",{id:\"clearList\",onClick:clearList,children:\"Clear List\"}),/*#__PURE__*/_jsx(\"ul\",{id:\"listBox\",children:toDoList.map(function(item,index){return/*#__PURE__*/_jsx(\"li\",{children:item.name},index);})}),/*#__PURE__*/_jsx(\"input\",{style:{marginBottom:'10px',width:'45%',height:'30px',borderRadius:'10px'},type:\"text\",onChange:handleName,ref:inputName}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAdd,children:\"Add Item\"})]})});}export default App;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/React/todolist/src/App.js"],"names":["React","useState","useRef","App","toDoList","setToDo","name","setName","inputName","handleName","event","target","value","handleAdd","newList","concat","clearList","current","textAlign","map","item","index","marginBottom","width","height","borderRadius"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,MAAzB,KAAsC,OAAtC,CACA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA4BF,QAAQ,CAAC,EAAD,CAApC,wCAAOG,QAAP,eAAiBC,OAAjB,eACA,eAAwBJ,QAAQ,CAAC,EAAD,CAAhC,yCAAOK,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAAC,IAAD,CAAxB,CAEA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5BH,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,OAAO,CAAGV,QAAQ,CAACW,MAAT,CAAgB,CAACT,IAAI,CAAJA,IAAD,CAAhB,CAAhB,CACAD,OAAO,CAACS,OAAD,CAAP,CACD,CAHD,CAKA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBX,OAAO,CAAC,EAAD,CAAP,CACAG,SAAS,CAACS,OAAV,CAAkBL,KAAlB,CAA0B,EAA1B,CACD,CAHD,CAKA,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,aAAK,SAAS,CAAC,eAAf,wBACE,WAAI,KAAK,CAAE,CAACM,SAAS,CAAE,QAAZ,CAAX,sBADF,cAEE,eAAQ,EAAE,CAAC,WAAX,CAAuB,OAAO,CAAEF,SAAhC,wBAFF,cAKE,WAAI,EAAE,CAAC,SAAP,UAEEZ,QAAQ,CAACe,GAAT,CAAa,SAACC,IAAD,CAAMC,KAAN,qBACX,oBAAiBD,IAAI,CAACd,IAAtB,EAASe,KAAT,CADW,EAAb,CAFF,EALF,cAaE,cAAO,KAAK,CAAE,CAACC,YAAY,CAAE,MAAf,CAAuBC,KAAK,CAAE,KAA9B,CAAqCC,MAAM,CAAE,MAA7C,CAAqDC,YAAY,CAAE,MAAnE,CAAd,CAA0F,IAAI,CAAC,MAA/F,CAAsG,QAAQ,CAAEhB,UAAhH,CAA4H,GAAG,CAAED,SAAjI,EAbF,cAcE,eAAQ,OAAO,CAAEK,SAAjB,sBAdF,GADF,EADF,CAoBD,CAED,cAAeV,CAAAA,GAAf","sourcesContent":["import React, {useState, useRef} from 'react'\nimport './App.css';\n\nfunction App() {\n  const [toDoList, setToDo] = useState([]);\n  const [name, setName] = useState('');\n  const inputName = useRef(null);\n\n  const handleName = (event) => {\n    setName(event.target.value);\n  }\n\n  const handleAdd = () => {\n    const newList = toDoList.concat({name});\n    setToDo(newList);\n  }\n\n  const clearList = () => {\n    setToDo([]);\n    inputName.current.value = '';\n  }\n\n  return (\n    <div className='mainContainer'>\n      <div className=\"todoContainer\">\n        <h1 style={{textAlign: 'center'}}>My Lists</h1>\n        <button id='clearList' onClick={clearList}>\n          Clear List\n        </button>\n        <ul id=\"listBox\">\n        {\n          toDoList.map((item,index) => (\n            <li key={index}>{item.name}</li>\n          ))\n        }\n        </ul>\n        \n        <input style={{marginBottom: '10px', width: '45%', height: '30px', borderRadius: '10px'}} type='text' onChange={handleName} ref={inputName}/>\n        <button onClick={handleAdd}>Add Item</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}